
Introduction:
-------------

This package provides a small facility to analyze one or a chain of root ntuples.

A script (./scripts/make_rootNtupleClass.sh) is used to generate automatically
(using the root command RootNtupleMaker->MakeClass) a class (include/rootNtupleClass.h 
and src/rootNtupleClass.C) with the variable definitions of a given root ntuple
(to be provided by the user).

The class baseClass (include/baseClass.h and src/baseClass.C) inherits from the
automatically generated rootNtupleClass. 
baseClass provides the methods that are common to all analysis, such as the method
to read a list of root files and form a chain. It will, asap, also provide a method 
to read a list of selection cuts.

The class analysisClass (include/analysisClass.h and src/analysisClass.C) inherits
from baseClass.
The user's code should be placed in the method Loop() of analysisClass, which reimplements
the method Loop() of rootNtupleClass. 

The main program (src/main.C) receives the configuration parameters (such a the input 
chain of root files) and executes the analysisClass code.

Instructions:
-------------

1) Checkout the code:
   export CVSROOT=:kserver:cmscvs.cern.ch:/cvs_server/repositories/CMSSW
   cvs checkout -d rootNtupleAnalyzer UserCode/Leptoquarks/rootNtupleAnalyzer

2) Generate the rootNtupleClass:
   cd rootNtupleAnalyzer/
   ./scripts/make_rootNtupleClass.sh   
      (you will be asked for input arguments)

3) Copy analysisClass_template.C to analysisClass.C by:
   cp -i src/analysisClass_template.C src/analysisClass.C
   
4) Compile to test that all is OK so far (in order to compile, steps 2 and 3 need to be done first):
   make clean
   make

5) Add your analysis code to the method Loop() of analysisClass.C

6) Compile as in 4.

7) Run:
   ./main 
      (you will be asked for input arguments)


Note1: 
  in order to have several analyses in this directory, one can
    mv -i src/analysisClass.C src/analysisClass_ONE.C
    ln -sf analysisClass_ONE.C src/analysisClass.C 
  and compile/run as above.
  A second analysis would then go into a file src/analysisClass_TWO.C
  then do
    ln -sf analysisClass_TWO.C src/analysisClass.C 
  and compile/run as above.

Note2: 
  a CVS area to commit all the analysis macros such as analysisClass_XXX.C
  has been prepared in 
  http://cmssw.cvs.cern.ch/cgi-bin/cmssw.cgi/UserCode/Leptoquarks/rootNtupleMacros/src/
  This will allow to separate the developments of the rootNtupleAnalyzer package
  and the developments of the analysis macros.
  In order to compile and run an analysis macro named analysisClass_XXX.C and stored 
  in a directory  /...fullPath.../rootNtupleMacros/src/, do:
    ln -sf /...fullPath.../rootNtupleMacros/src/analysisClass_XXX.C src/analysisClass.C
  and compile/run as above.


Additional scripts:

  script/createList.pl: it creates a .txt list of .root input files to be used as input for the analysis
  script/launchAnalysis.pl: it launches the analysis jobs for all the lists created by "script/createList.pl"
